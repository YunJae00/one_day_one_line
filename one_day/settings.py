"""
Django settings for one_day project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import json
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


def get_env_variable(var_name, default=None):
    try:
        return os.environ[var_name]
    except KeyError:
        # 환경 변수가 없는 경우 secrets.json에서 시도
        try:
            secret_file = os.path.join(BASE_DIR, 'secrets.json')
            if os.path.exists(secret_file):
                with open(secret_file) as f:
                    secrets = json.loads(f.read())
                return secrets.get(var_name, default)
        except (IOError, json.JSONDecodeError):
            pass
        return default


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_env_variable("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

LAMBDA_URL = get_env_variable("LAMBDA_URL")
API_GATEWAY = get_env_variable("API GATEWAY")

ALLOWED_HOSTS = [
    "onedayoneline.shop",
    LAMBDA_URL,
    API_GATEWAY,
]

CORS_ALLOWED_ORIGINS = [
    "https://onedayoneline.shop",
    "http://onedayoneline.shop",
]

AUTH_USER_MODEL = "accounts.User"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # custom apps
    'accounts',
    'contents',
    'subscriptions',
    'mailing',
    #
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'
    # 'one_day.middleware.debug_middleware',
]

ROOT_URLCONF = 'one_day.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'one_day.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': get_env_variable("DB_NAME"),
        'USER': get_env_variable("DB_USER"),
        'PASSWORD': get_env_variable("DB_PASSWORD"),
        'HOST': get_env_variable("DB_HOST"),
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# 로그인 리다이렉트 설정
LOGIN_URL = '/accounts/login/'

# 세션 쿠키 유효기간 (초 단위)
SESSION_COOKIE_AGE = 1800  # 30분

# 브라우저 종료 시 세션 만료 여부 (False면 브라우저를 닫아도 SESSION_COOKIE_AGE에 따라 유지)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# 사용자가 사이트를 탐색할 때마다 세션 만료 시간 갱신 여부
SESSION_SAVE_EVERY_REQUEST = True

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True

USE_L10N = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# Static files (CSS, JavaScript, Images)
if DEBUG:
    # 개발 환경: 로컬 스태틱 파일 사용
    STATIC_URL = '/static/'
    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'
else:
    # 프로덕션 환경: S3 사용
    AWS_STORAGE_BUCKET_NAME = get_env_variable("AWS_STATIC_BUCKET_NAME")
    AWS_S3_REGION_NAME = 'ap-northeast-2'
    AWS_ACCESS_KEY_ID = get_env_variable("AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY = get_env_variable("AWS_SECRET_ACCESS_KEY")

    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
    AWS_LOCATION = 'static'

    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# 기본 URL 설정
# SITE_URL = 'http://localhost:8000'
SITE_URL = 'https://onedayoneline.shop'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 메시지 태그 설정 (Bootstrap 호환)
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

AWS_SES_ACCESS_KEY_ID = get_env_variable("AWS_SES_ACCESS_KEY_ID", get_env_variable("AWS_ACCESS_KEY_ID"))
AWS_SES_SECRET_ACCESS_KEY = get_env_variable("AWS_SES_SECRET_ACCESS_KEY", get_env_variable("AWS_SECRET_ACCESS_KEY"))

# 이메일 설정
EMAIL_BACKEND = 'django_ses.SESBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # 실제 환경
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # 콘솔 출력

DEFAULT_FROM_EMAIL = 'no-reply@onedayoneline.shop'

# 이메일 설정 (SES 사용)
# SES 리전 설정
AWS_SES_REGION_NAME = 'ap-northeast-2'  # 서울 리전
AWS_SES_REGION_ENDPOINT = 'email.ap-northeast-2.amazonaws.com'
